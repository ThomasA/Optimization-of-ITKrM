np.random.seed(0)

K = 200         # Number of columns in D (Atoms)
S = 50         # Number of used vectors (Sparsity). Amount that is NOT zero.
maxit = 20
N = 1024        #Length of training examples, length of Y
e_or_S = 1      # for error = 0, for S = 1

pic_number = 0

#data = np.load('grayScale32x32cars.npy')

data = LoadFromDataBatch.ImportData(7, 1)
    # Parameters:
    #     picType: Positive integer between [0:10]. -1 returns all pictures.
    #     batchNumber: Positive integer between [1:5]

data=data[:4,:]  # A reduction in the set size, to test less optimal ITKrM routines without waiting hours

W_data = 32    # Width in pixels
H_data = 32    # Height in pixels

e = 30

32x32 window test, 15/03
[12603, 12411, 12390, 12302, 12326, 12335, 13350, 12684, 15107, 13340, 13498, 13404, 12228, 11995, 13296, 12408, 11655, 12788, 12857, 12691]

16x16 window test, 15/03
[4044, 3791, 3972, 3761, 3864, 3703, 3903, 3933, 5699, 4165, 5456, 3926, 4048, 3804, 3798, 3753, 3737, 3755, 3776, 3702]

8x8 window test, 15/03
[9012, 9165, 8740, 8568, 8456, 8421, 8474, 8443, 8833, 8428, 8422, 8411, 8448, 8485, 8416, 8455, 8430, 8428, 8470, 8445]

4x4 window test, 15/03
[13848, 13666, 16739, 24908, 15894, 16772, 18376, 18076, 17517, 14722, 15081, 14363, 14585, 15441, 18562, 15542, 14387, 14476, 18840, 15936]

2x2 window test, 15/03
[29067, 32850, 33470, 32782, 33241, 32874, 32233, 29995, 31945, 31773, 28749, 28638, 28620, 31443, 30552, 30189, 30737, 30427, 30959, 29936]

1x1 window test, 15/03
[87008, 78345, 77693, 77658, 79129, 82022] 


64x64 window test, 15/03
[49735, 47695, 45248, 45373, 53874]
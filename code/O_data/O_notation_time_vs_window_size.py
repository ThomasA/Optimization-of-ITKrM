# -*- coding: utf-8 -*-
"""
Created on Wed Mar 14 13:49:06 2018

@author: Niels
"""

import numpy as np
import matplotlib.pyplot as plt

data={}
n=np.array([1,2,4,8,16,32,64])

## batch 14/03
data["data_1x1"] = [341943, 335831, 343651, 336283, 342388, 344037, 343024, 339281, 340104, 336828, 339090, 339253, 338222, 337897, 343649, 337953, 338948, 340054, 338630, 338223]
data["data_2x2"] = [119202, 118310, 118248, 138143, 123992, 127031, 139821, 127317, 113400, 143272, 136505, 122951, 133980, 120299, 122385, 121816, 119073, 126696, 132446, 129690]
data["data_4x4"] = [37374, 36997, 38981, 39370, 32898, 29338, 29415, 29506, 32818, 36450, 36730, 36871, 33553, 35409, 34866, 35151, 35180, 35132, 33508, 32831]
data["data_8x8"] = [8377, 8198, 8289, 8145, 8145, 8220, 8234, 8236, 8284, 8162, 8214, 8190, 8285, 8231, 8261, 9158, 9092, 9265, 9554, 9691]
data["data_16x16"] = [4993, 4755, 4753, 4889, 5100, 5655, 6425, 5940, 4963, 5412, 5339, 5556, 5045, 5229, 5103, 5296, 5045, 4967, 5064, 4944]
data["data_32x32"] = [55423, 54877, 48042, 49694, 46901, 45621, 52725, 54413, 55685, 71953, 50314, 50755, 50068, 52789, 53114, 49237, 49429, 48122, 51101, 49202]
data["data_64x64"] = [236652, 223082, 221061, 224397, 221616, 227679] ##fake data

### batch 15/03
#data["data_1x1"] = [87008, 78345, 77693, 77658, 79129, 82022] 
#data["data_2x2"] = [29067, 32850, 33470, 32782, 33241, 32874, 32233, 29995, 31945, 31773, 28749, 28638, 28620, 31443, 30552, 30189, 30737, 30427, 30959, 29936]
#data["data_4x4"] = [13848, 13666, 16739, 24908, 15894, 16772, 18376, 18076, 17517, 14722, 15081, 14363, 14585, 15441, 18562, 15542, 14387, 14476, 18840, 15936]
#data["data_8x8"] = [9012, 9165, 8740, 8568, 8456, 8421, 8474, 8443, 8833, 8428, 8422, 8411, 8448, 8485, 8416, 8455, 8430, 8428, 8470, 8445]
#data["data_16x16"] = [4044, 3791, 3972, 3761, 3864, 3703, 3903, 3933, 5699, 4165, 5456, 3926, 4048, 3804, 3798, 3753, 3737, 3755, 3776, 3702]
#data["data_32x32"] = [12603, 12411, 12390, 12302, 12326, 12335, 13350, 12684, 15107, 13340, 13498, 13404, 12228, 11995, 13296, 12408, 11655, 12788, 12857, 12691]
#data["data_64x64"] = [49735, 47695, 45248, 45373, 53874] ## fake data



mean_data=[]
for key in data.keys():
   mean_data += [np.mean(data[key])]
plt.close('all') 

plt.title("Execution time vs window size")


A = np.vstack([n, np.ones(len(n))]).T
m, c = np.linalg.lstsq(A, mean_data)[0]

#plt.plot(n, m*n + c, 'r', label='Fitted line')
plt.plot(n,mean_data,label="Meaned times")

## part 2 work needed
#plt.figure(2)
#plt.title("O notation guess")
p=4
d=32
m=1*n
a=p**2*d**2/(m**2)
b=p*2*m**2

#plt.plot(n,(a+b),label="O notation 'guess'")


plt.legend()
plt.xlabel("Window size [N x N]")
plt.ylabel("Execution time [ms]")

### save figure
#plt.tight_layout()
#plt.savefig('window_test.eps')

